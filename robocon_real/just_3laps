from signal import SIG_UNBLOCK
import RPi.GPIO as GPIO             #GPIO用のモジュールをインポート
import time                         #時間制御用のモジュールをインポート
import sys                          #sysモジュールをインポート


CWpR=17
CWmR=3
CCWpR=5
CCWmR=6
CWpL=
CWmL=
CCWpL=
CCWmL=

#GPIOの設定
 #モータ
GPIO.setmode(GPIO.BCM)               #GPIOのモードを"GPIO.BCM"に設定
GPIO.setup(CWp, GPIO.OUT)            #GPIO17を出力モードに設定
GPIO.setup(CWm, GPIO.OUT)            #GPIO3を出力モードに設定
GPIO.setup(CCWp, GPIO.OUT)           #GPIO23を出力モードに設定
GPIO.setup(CCWm, GPIO.OUT)           #GPIO4を出力モードに設定

　#超音波センサ
GPIO.setup(Trig, GPIO.OUT)          #GPIO27を出力モードに設定
GPIO.setup(Echo, GPIO.IN)           #GPIO18を入力モードに設定

#HC-SR04で距離を測定する関数
def read_distance():

    global sig_on
    global sig_off

    GPIO.output(Trig, GPIO.HIGH)            #GPIO27の出力をHigh(3.3V)にする
    time.sleep(0.00001)                     #10μ秒間待つ
    GPIO.output(Trig, GPIO.LOW)             #GPIO27の出力をLow(0V)にする

    while GPIO.input(Echo) == GPIO.LOW:     #GPIO18がLowの時間
        sig_off = time.time()
    while GPIO.input(Echo) == GPIO.HIGH:    #GPIO18がHighの時間
        sig_on = time.time()


    duration = sig_off - sig_on             #GPIO18がHighしている時間を算術
    distance = duration * 34000 / 2         #距離を求める(cm)
    return distance

#ステッピングモータを制御する関数
def right_go(waittime):　#右ステッピングモータを正転させる関数
  GPIO.output(CWpR, GPIO.HIGH)
  GPIO.output(CWmR, GPIO.LOW)             #CWをONに
  time.sleep(waittime)
  GPIO.output(CWpR, GPIO.LOW)
  GPIO.output(CWmR, GPIO.HIGH)            #CWをOFFに
  time.sleep(waittime)
  
def right_back(waittime):　#右ステッピングモータを逆転させる関数
  GPIO.output(CCWpR, GPIO.HIGH)
  GPIO.output(CCWmR, GPIO.LOW)             #CCWをONに
  time.sleep(waittime)
  GPIO.output(CCWpR, GPIO.LOW)
  GPIO.output(CCWmR, GPIO.HIGH)            #CCWをOFFに
  time.sleep(waittime)
    
def left_go(waittime):　#左ステッピングモータを正転させる関数
  GPIO.output(CWpL, GPIO.HIGH)
  GPIO.output(CWmL, GPIO.LOW)             #CWをONに
  time.sleep(waittime)
  GPIO.output(CWpL, GPIO.LOW)
  GPIO.output(CWmL, GPIO.HIGH)            #CWをOFFに
  time.sleep(waittime)
  
def left_back(waittime):　#左ステッピングモータを逆転させる関数
  GPIO.output(CCWpL, GPIO.HIGH)
  GPIO.output(CCWmL, GPIO.LOW)             #CCWをONに
  time.sleep(waittime)
  GPIO.output(CCWpL, GPIO.LOW)
  GPIO.output(CCWmL, GPIO.HIGH)            #CCWをOFFに
  time.sleep(waittime)
    
#旋回回数
turn = 0


while True:
  try:
        cm = -read_distance()
        print(cm)                   #HC-SR04で距離を測定する
        if cm > 2 and cm < 400:                #距離が2～400cmの場合
            print("distance=", int(cm), "cm")  #距離をint型で表示
        else:
            print("over")
        
        if cm<15:  #距離が15cm未満になったら，旋回回数の値を＋１して右旋回
            if number_of_turns = 10:  　#旋回回数が10なら停止
            
            right_go()
            left_go()
              
            turn = turn + 1
            print("turn=", int(turn))　#旋回回数をint型で表示
            
        if cm>15:  #距離が15cmより大きくなったら直進
            right_go()
            left_go()
        

    except KeyboardInterrupt:       #Ctrl+Cキーが押された
        GPIO.cleanup()              #GPIOをクリーンアップ
        sys.exit()                  #プログラム終了
